use TRG
TRUNCATE TABLE ITEMTRANSACTIONS 
SELECT * FROM ITEMTRANSACTIONS
SELECT * FROM STOCK
UPDATE STOCK SET STOCK = 0
-----------------
INSERT INTO ITEMTRANSACTIONS (ITEMID, AMOUNT, IOTYPE, DATE_) 
VALUES (1,5, 1 , GETDATE())
TRUNCATE TABLE ITEMTRANSACTIONS 

----------------------------------------------------
--------------------- TRIGER -----------------------
----------------------------------------------------
CREATE TRIGGER TRG_TRANSACTION_INSERT
ON ITEMTRANSACTIONS 
AFTER INSERT 
AS 
BEGIN
	DECLARE @ITEMID AS INT
	DECLARE @AMOUNT AS INT
	DECLARE @IOTYPE AS SMALLINT
	SELECT @ITEMID = ITEMID, @AMOUNT = AMOUNT, @IOTYPE = IOTYPE FROM INSERTED
	IF @IOTYPE = 1
		UPDATE STOCK SET STOCK = STOCK + @AMOUNT WHERE ITEMID = @ITEMID 
	IF @IOTYPE = 2
		UPDATE STOCK SET STOCK = STOCK - @AMOUNT WHERE ITEMID = @ITEMID 

END

--------------- INSERT ------------------
---------------------------
UPDATE  STOCK SET STOCK = 0
TRUNCATE TABLE ITEMTRANSACTIONS
---------------------------
DECLARE @ITEMID AS INT
DECLARE @DATE AS DATETIME
DECLARE @AMOUNT AS INT
DECLARE @IOTYPE AS SMALLINT
DECLARE @J INT
SET @J = 0
WHILE @J < 100000
BEGIN
	SET @ITEMID = ROUND(RAND() * 999 , 0) + 1
	SET @DATE = DATEADD(DAY, -ROUND(RAND() * 365 ,0 ), GETDATE())  
	SET @AMOUNT = ROUND(RAND() * 9 , 0) + 1
	SET @IOTYPE = ROUND(RAND() * 1 , 0) + 1
	IF @IOTYPE = 2
		SET @IOTYPE = ROUND( @IOTYPE / 2, 0)
	INSERT INTO ITEMTRANSACTIONS (ITEMID, DATE_, AMOUNT, IOTYPE)
	VALUES (@ITEMID, @DATE, @AMOUNT, @IOTYPE)
	SET @J = @J +1
END
SELECT * FROM ITEMTRANSACTIONS
SELECT * FROM STOCK
